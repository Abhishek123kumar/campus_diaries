{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/Downloads/firebase-blog-master/src/pages/Detail.js\",\n    _s = $RefreshSig$();\n\nimport { collection, doc, getDoc, getDocs, limit, query, serverTimestamp, Timestamp, updateDoc, orderBy, where } from \"firebase/firestore\";\nimport { isEmpty } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport CommentBox from \"../components/CommentBox\";\nimport Like from \"../components/Like\";\nimport FeatureBlogs from \"../components/FeatureBlogs\";\nimport RelatedBlog from \"../components/RelatedBlog\";\nimport Tags from \"../components/Tags\";\nimport UserComments from \"../components/UserComments\";\nimport { db } from \"../firebase\";\nimport Spinner from \"../components/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Detail = _ref => {\n  _s();\n\n  let {\n    setActive,\n    user\n  } = _ref;\n  const userId = user === null || user === void 0 ? void 0 : user.uid;\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [blog, setBlog] = useState(null);\n  const [blogs, setBlogs] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [comments, setComments] = useState([]);\n  let [likes, setLikes] = useState([]);\n  const [userComment, setUserComment] = useState(\"\");\n  const [relatedBlogs, setRelatedBlogs] = useState([]);\n  useEffect(() => {\n    const getRecentBlogs = async () => {\n      const blogRef = collection(db, \"blogs\");\n      const recentBlogs = query(blogRef, orderBy(\"timestamp\", \"desc\"), limit(5));\n      const docSnapshot = await getDocs(recentBlogs);\n      setBlogs(docSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      })));\n    };\n\n    getRecentBlogs();\n  }, []);\n  useEffect(() => {\n    id && getBlogDetail(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]); //   if (loading) {\n  //     return <Spinner />;\n  //   }\n  //   const getBlogDetail = async () => {\n  //     setLoading(true);\n  //     const blogRef = collection(db, \"blogs\");\n  //     const docRef = doc(db, \"blogs\", id);\n  //     const blogDetail = await getDoc(docRef);\n  //     const blogs = await getDocs(blogRef);\n  //     let tags = [];\n  //     blogs.docs.map((doc) => tags.push(...doc.get(\"tags\")));\n  //     let uniqueTags = [...new Set(tags)];\n  //     setTags(uniqueTags);\n  //     setBlog(blogDetail.data());\n  //     const relatedBlogsQuery = query(\n  //       blogRef,\n  //       where(\"tags\", \"array-contains-any\", blogDetail.data().tags, limit(3))\n  //     );\n  //     setComments(blogDetail.data().comments ? blogDetail.data().comments : []);\n  //     setLikes(blogDetail.data().likes ? blogDetail.data().likes : []);\n  //     const relatedBlogSnapshot = await getDocs(relatedBlogsQuery);\n  //     const relatedBlogs = [];\n  //     relatedBlogSnapshot.forEach((doc) => {\n  //       relatedBlogs.push({ id: doc.id, ...doc.data() });\n  //     });\n  //     setRelatedBlogs(relatedBlogs);\n  //     setActive(null);\n  //     setLoading(false);\n  //   };\n  //   const handleComment = async (e) => {\n  //     e.preventDefault();\n  //     comments.push({\n  //       createdAt: Timestamp.fromDate(new Date()),\n  //       userId,\n  //       name: user?.displayName,\n  //       body: userComment,\n  //     });\n  //     toast.success(\"Comment posted successfully\");\n  //     await updateDoc(doc(db, \"blogs\", id), {\n  //       ...blog,\n  //       comments,\n  //       timestamp: serverTimestamp(),\n  //     });\n  //     setComments(comments);\n  //     setUserComment(\"\");\n  //   };\n  //   const handleLike = async () => {\n  //     if (userId) {\n  //       if (blog?.likes) {\n  //         const index = likes.findIndex((id) => id === userId);\n  //         if (index === -1) {\n  //           likes.push(userId);\n  //           setLikes([...new Set(likes)]);\n  //         } else {\n  //           likes = likes.filter((id) => id !== userId);\n  //           setLikes(likes);\n  //         }\n  //       }\n  //       await updateDoc(doc(db, \"blogs\", id), {\n  //         ...blog,\n  //         likes,\n  //         timestamp: serverTimestamp(),\n  //       });\n  //     }\n  //   };\n  //   console.log(\"relatedBlogs\", relatedBlogs);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"single\",\n    children: \"ABHISHEK\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Detail, \"xyCQFl0xe+BNlpMR0kvOOp+pNUQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Detail;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["collection","doc","getDoc","getDocs","limit","query","serverTimestamp","Timestamp","updateDoc","orderBy","where","isEmpty","React","useState","useEffect","useParams","toast","CommentBox","Like","FeatureBlogs","RelatedBlog","Tags","UserComments","db","Spinner","Detail","setActive","user","userId","uid","id","loading","setLoading","blog","setBlog","blogs","setBlogs","tags","setTags","comments","setComments","likes","setLikes","userComment","setUserComment","relatedBlogs","setRelatedBlogs","getRecentBlogs","blogRef","recentBlogs","docSnapshot","docs","map","data","getBlogDetail"],"sources":["/Users/abhishekkumar/Downloads/firebase-blog-master/src/pages/Detail.js"],"sourcesContent":["import {\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  limit,\n  query,\n  serverTimestamp,\n  Timestamp,\n  updateDoc,\n  orderBy,\n  where,\n} from \"firebase/firestore\";\nimport { isEmpty } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport CommentBox from \"../components/CommentBox\";\nimport Like from \"../components/Like\";\nimport FeatureBlogs from \"../components/FeatureBlogs\";\nimport RelatedBlog from \"../components/RelatedBlog\";\nimport Tags from \"../components/Tags\";\nimport UserComments from \"../components/UserComments\";\nimport { db } from \"../firebase\";\nimport Spinner from \"../components/Spinner\";\n\n const Detail = ({ setActive, user }) => {\n  const userId = user?.uid;\n  const { id } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [blog, setBlog] = useState(null);\n  const [blogs, setBlogs] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [comments, setComments] = useState([]);\n  let [likes, setLikes] = useState([]);\n  const [userComment, setUserComment] = useState(\"\");\n  const [relatedBlogs, setRelatedBlogs] = useState([]);\n\n\n  useEffect(() => {\n    const getRecentBlogs = async () => {\n      const blogRef = collection(db, \"blogs\");\n      const recentBlogs = query(\n        blogRef,\n        orderBy(\"timestamp\", \"desc\"),\n        limit(5)\n      );\n      const docSnapshot = await getDocs(recentBlogs);\n      setBlogs(docSnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() })));\n    };\n\n    getRecentBlogs();\n  }, []);\n\n\n  useEffect(() => {\n    id && getBlogDetail();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n//   if (loading) {\n//     return <Spinner />;\n//   }\n\n//   const getBlogDetail = async () => {\n//     setLoading(true);\n//     const blogRef = collection(db, \"blogs\");\n//     const docRef = doc(db, \"blogs\", id);\n//     const blogDetail = await getDoc(docRef);\n//     const blogs = await getDocs(blogRef);\n//     let tags = [];\n//     blogs.docs.map((doc) => tags.push(...doc.get(\"tags\")));\n//     let uniqueTags = [...new Set(tags)];\n//     setTags(uniqueTags);\n//     setBlog(blogDetail.data());\n//     const relatedBlogsQuery = query(\n//       blogRef,\n//       where(\"tags\", \"array-contains-any\", blogDetail.data().tags, limit(3))\n//     );\n//     setComments(blogDetail.data().comments ? blogDetail.data().comments : []);\n//     setLikes(blogDetail.data().likes ? blogDetail.data().likes : []);\n//     const relatedBlogSnapshot = await getDocs(relatedBlogsQuery);\n//     const relatedBlogs = [];\n//     relatedBlogSnapshot.forEach((doc) => {\n//       relatedBlogs.push({ id: doc.id, ...doc.data() });\n//     });\n//     setRelatedBlogs(relatedBlogs);\n//     setActive(null);\n//     setLoading(false);\n//   };\n\n//   const handleComment = async (e) => {\n//     e.preventDefault();\n//     comments.push({\n//       createdAt: Timestamp.fromDate(new Date()),\n//       userId,\n//       name: user?.displayName,\n//       body: userComment,\n//     });\n//     toast.success(\"Comment posted successfully\");\n//     await updateDoc(doc(db, \"blogs\", id), {\n//       ...blog,\n//       comments,\n//       timestamp: serverTimestamp(),\n//     });\n//     setComments(comments);\n//     setUserComment(\"\");\n//   };\n\n//   const handleLike = async () => {\n//     if (userId) {\n//       if (blog?.likes) {\n//         const index = likes.findIndex((id) => id === userId);\n//         if (index === -1) {\n//           likes.push(userId);\n//           setLikes([...new Set(likes)]);\n//         } else {\n//           likes = likes.filter((id) => id !== userId);\n//           setLikes(likes);\n//         }\n//       }\n//       await updateDoc(doc(db, \"blogs\", id), {\n//         ...blog,\n//         likes,\n//         timestamp: serverTimestamp(),\n//       });\n//     }\n//   };\n\n//   console.log(\"relatedBlogs\", relatedBlogs);\n  return (\n    <div className=\"single\">\n      ABHISHEK\n      {/* <div\n        className=\"blog-title-box\"\n        style={{ backgroundImage: `url('${blog?.imgUrl}')` }}\n      >\n        <div className=\"overlay\"></div>\n        <div className=\"blog-title\">\n          <span>{blog?.timestamp.toDate().toDateString()}</span>\n          <h2>{blog?.title}</h2>\n        </div>\n      </div>\n      <div className=\"container-fluid pb-4 pt-4 padding blog-single-content\">\n        <div className=\"container padding\">\n          <div className=\"row mx-0\">\n            <div className=\"col-md-8\">\n              <span className=\"meta-info text-start\">\n                By <p className=\"author\">{blog?.author}</p> -&nbsp;\n                {blog?.timestamp.toDate().toDateString()}\n                <Like handleLike={handleLike} likes={likes} userId={userId} />\n              </span>\n              <p className=\"text-start\">{blog?.description}</p>\n              <div className=\"text-start\">\n                <Tags tags={blog?.tags} />\n              </div>\n              <br />\n              <div className=\"custombox\">\n                <div className=\"scroll\">\n                  <h4 className=\"small-title\">{comments?.length} Comment</h4>\n                  {isEmpty(comments) ? (\n                    <UserComments\n                      msg={\n                        \"No Comment yet posted on this blog. Be the first to comment\"\n                      }\n                    />\n                  ) : (\n                    <>\n                      {comments?.map((comment) => (\n                        <UserComments {...comment} />\n                      ))}\n                    </>\n                  )}\n                </div>\n              </div>\n              <CommentBox\n                userId={userId}\n                userComment={userComment}\n                setUserComment={setUserComment}\n                handleComment={handleComment}\n              />\n            </div>\n            <div className=\"col-md-3\">\n              <div className=\"blog-heading text-start py-2 mb-4\">Tags</div>\n              <Tags tags={tags} />\n              <FeatureBlogs title={\"Recent Blogs\"} blogs={blogs} />\n            </div>\n          </div>\n          <RelatedBlog id={id} blogs={relatedBlogs} />\n        </div>\n      </div> */}\n    </div>\n  );\n};\n\nexport default Detail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}