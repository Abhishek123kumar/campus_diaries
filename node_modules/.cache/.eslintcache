[{"/Users/abhishekkumar/Desktop/firebase-blog-master/src/index.js":"1","/Users/abhishekkumar/Desktop/firebase-blog-master/src/reportWebVitals.js":"2","/Users/abhishekkumar/Desktop/firebase-blog-master/src/App.js":"3","/Users/abhishekkumar/Desktop/firebase-blog-master/src/firebase.js":"4","/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/Home.js":"5","/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/TagBlog.js":"6","/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/Auth.js":"7","/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/Detail.js":"8","/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/NotFound.js":"9","/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/About.js":"10","/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/CategoryBlog.js":"11","/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/AddEditBlog.js":"12","/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/Blogs.js":"13","/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/ScrollToTop.js":"14","/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Header.js":"15","/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/BlogSection.js":"16","/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Trending.js":"17","/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Spinner.js":"18","/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Tags.js":"19","/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Category.js":"20","/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Search.js":"21","/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Like.js":"22","/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/RelatedBlog.js":"23","/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/FeatureBlogs.js":"24","/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/UserComments.js":"25","/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/CommentBox.js":"26","/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Pagination.js":"27","/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Card.js":"28","/Users/abhishekkumar/Desktop/firebase-blog-master/src/utility/index.js":"29"},{"size":679,"mtime":1693129356003,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1693129356004,"results":"32","hashOfConfig":"31"},{"size":2810,"mtime":1693129356002,"results":"33","hashOfConfig":"31"},{"size":1587,"mtime":1693129356003,"results":"34","hashOfConfig":"31"},{"size":6979,"mtime":1693129356004,"results":"35","hashOfConfig":"31"},{"size":1513,"mtime":1693129356004,"results":"36","hashOfConfig":"31"},{"size":5833,"mtime":1693129356004,"results":"37","hashOfConfig":"31"},{"size":6011,"mtime":1693134396863,"results":"38","hashOfConfig":"31"},{"size":176,"mtime":1693129356004,"results":"39","hashOfConfig":"31"},{"size":1827,"mtime":1693129356004,"results":"40","hashOfConfig":"31"},{"size":1532,"mtime":1693129356004,"results":"41","hashOfConfig":"31"},{"size":8640,"mtime":1693129361790,"results":"42","hashOfConfig":"31"},{"size":3602,"mtime":1693129356004,"results":"43","hashOfConfig":"31"},{"size":789,"mtime":1693129356003,"results":"44","hashOfConfig":"31"},{"size":4199,"mtime":1693129361790,"results":"45","hashOfConfig":"31"},{"size":1836,"mtime":1693129361790,"results":"46","hashOfConfig":"31"},{"size":1617,"mtime":1693129356003,"results":"47","hashOfConfig":"31"},{"size":242,"mtime":1693129356003,"results":"48","hashOfConfig":"31"},{"size":478,"mtime":1693129356003,"results":"49","hashOfConfig":"31"},{"size":721,"mtime":1693129356003,"results":"50","hashOfConfig":"31"},{"size":911,"mtime":1693129356003,"results":"51","hashOfConfig":"31"},{"size":1562,"mtime":1693129356003,"results":"52","hashOfConfig":"31"},{"size":772,"mtime":1693129356003,"results":"53","hashOfConfig":"31"},{"size":1012,"mtime":1693129356003,"results":"54","hashOfConfig":"31"},{"size":1101,"mtime":1693129356003,"results":"55","hashOfConfig":"31"},{"size":1006,"mtime":1693129356003,"results":"56","hashOfConfig":"31"},{"size":866,"mtime":1693129356003,"results":"57","hashOfConfig":"31"},{"size":1133,"mtime":1693129356002,"results":"58","hashOfConfig":"31"},{"size":135,"mtime":1693129356005,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3he6mw",{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/abhishekkumar/Desktop/firebase-blog-master/src/index.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/reportWebVitals.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/App.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/firebase.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/Home.js",["152"],[],"import {\n  collection,\n  deleteDoc,\n  doc,\n  getDocs,\n  limit,\n  onSnapshot,\n  query,\n  orderBy,\n  where,\n  startAfter,\n} from \"firebase/firestore\";\nimport React, { useState, useEffect } from \"react\";\nimport BlogSection from \"../components/BlogSection\";\nimport Spinner from \"../components/Spinner\";\nimport { db } from \"../firebase\";\nimport { toast } from \"react-toastify\";\nimport Tags from \"../components/Tags\";\nimport FeatureBlogs from \"../components/FeatureBlogs\";\nimport Trending from \"../components/Trending\";\nimport Search from \"../components/Search\";\nimport { isEmpty, isNull } from \"lodash\";\nimport { useLocation } from \"react-router-dom\";\nimport Category from \"../components/Category\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst Home = ({ setActive, user, active }) => {\n  const [loading, setLoading] = useState(true);\n  const [blogs, setBlogs] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [lastVisible, setLastVisible] = useState(null);\n  const [trendBlogs, setTrendBlogs] = useState([]);\n  const [totalBlogs, setTotalBlogs] = useState(null);\n  const [hide, setHide] = useState(false);\n  const queryString = useQuery();\n  const searchQuery = queryString.get(\"searchQuery\");\n  const location = useLocation();\n\n  const getTrendingBlogs = async () => {\n    const blogRef = collection(db, \"blogs\");\n    const trendQuery = query(blogRef, where(\"trending\", \"==\", \"yes\"));\n    const querySnapshot = await getDocs(trendQuery);\n    let trendBlogs = [];\n    querySnapshot.forEach((doc) => {\n      trendBlogs.push({ id: doc.id, ...doc.data() });\n    });\n    setTrendBlogs(trendBlogs);\n  };\n\n  useEffect(() => {\n    getTrendingBlogs();\n    setSearch(\"\");\n    const unsub = onSnapshot(\n      collection(db, \"blogs\"),\n      (snapshot) => {\n        let list = [];\n        let tags = [];\n        snapshot.docs.forEach((doc) => {\n          tags.push(...doc.get(\"tags\"));\n          list.push({ id: doc.id, ...doc.data() });\n        });\n        const uniqueTags = [...new Set(tags)];\n        setTags(uniqueTags);\n        setTotalBlogs(list);\n        // setBlogs(list);\n        setLoading(false);\n        setActive(\"home\");\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n\n    return () => {\n      unsub();\n      getTrendingBlogs();\n    };\n  }, [setActive, active]);\n\n  useEffect(() => {\n    getBlogs();\n    setHide(false);\n  }, [active]);\n\n  const getBlogs = async () => {\n    const blogRef = collection(db, \"blogs\");\n    console.log(blogRef);\n    const firstFour = query(blogRef, orderBy(\"title\"), limit(4));\n    const docSnapshot = await getDocs(firstFour);\n    setBlogs(docSnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() })));\n    setLastVisible(docSnapshot.docs[docSnapshot.docs.length - 1]);\n  };\n\n  console.log(\"blogs\", blogs);\n\n  const updateState = (docSnapshot) => {\n    const isCollectionEmpty = docSnapshot.size === 0;\n    if (!isCollectionEmpty) {\n      const blogsData = docSnapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setBlogs((blogs) => [...blogs, ...blogsData]);\n      setLastVisible(docSnapshot.docs[docSnapshot.docs.length - 1]);\n    } else {\n      toast.info(\"No more blog to display\");\n      setHide(true);\n    }\n  };\n\n  const fetchMore = async () => {\n    setLoading(true);\n    const blogRef = collection(db, \"blogs\");\n    const nextFour = query(\n      blogRef,\n      orderBy(\"title\"),\n      limit(4),\n      startAfter(lastVisible)\n    );\n    const docSnapshot = await getDocs(nextFour);\n    updateState(docSnapshot);\n    setLoading(false);\n  };\n\n  const searchBlogs = async () => {\n    const blogRef = collection(db, \"blogs\");\n    const searchTitleQuery = query(blogRef, where(\"title\", \"==\", searchQuery));\n    const searchTagQuery = query(\n      blogRef,\n      where(\"tags\", \"array-contains\", searchQuery)\n    );\n    const titleSnapshot = await getDocs(searchTitleQuery);\n    const tagSnapshot = await getDocs(searchTagQuery);\n\n    let searchTitleBlogs = [];\n    let searchTagBlogs = [];\n    titleSnapshot.forEach((doc) => {\n      searchTitleBlogs.push({ id: doc.id, ...doc.data() });\n    });\n    tagSnapshot.forEach((doc) => {\n      searchTagBlogs.push({ id: doc.id, ...doc.data() });\n    });\n    const combinedSearchBlogs = searchTitleBlogs.concat(searchTagBlogs);\n    setBlogs(combinedSearchBlogs);\n    setHide(true);\n    setActive(\"\");\n  };\n\n  useEffect(() => {\n    if (!isNull(searchQuery)) {\n      searchBlogs();\n    }\n  }, [searchQuery]);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  const handleDelete = async (id) => {\n    if (window.confirm(\"Are you sure wanted to delete that blog ?\")) {\n      try {\n        setLoading(true);\n        await deleteDoc(doc(db, \"blogs\", id));\n        toast.success(\"Blog deleted successfully\");\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    if (isEmpty(value)) {\n      console.log(\"test\");\n      getBlogs();\n      setHide(false);\n    }\n    setSearch(value);\n  };\n\n  // category count\n  const counts = totalBlogs.reduce((prevValue, currentValue) => {\n    let name = currentValue.category;\n    if (!prevValue.hasOwnProperty(name)) {\n      prevValue[name] = 0;\n    }\n    prevValue[name]++;\n    // delete prevValue[\"undefined\"];\n    return prevValue;\n  }, {});\n\n  const categoryCount = Object.keys(counts).map((k) => {\n    return {\n      category: k,\n      count: counts[k],\n    };\n  });\n\n  console.log(\"categoryCount\", categoryCount);\n\n  return (\n    <div className=\"container-fluid pb-4 pt-4 padding\">\n      <div className=\"container padding\">\n        <div className=\"row mx-0\">\n          <Trending blogs={trendBlogs} />\n          <div className=\"col-md-8\">\n            <div className=\"blog-heading text-start py-2 mb-4\">Daily Blogs</div>\n            {blogs.length === 0 && location.pathname !== \"/\" && (\n              <>\n                <h4>\n                  No Blog found with search keyword:{\" \"}\n                  <strong>{searchQuery}</strong>\n                </h4>\n              </>\n            )}\n            {blogs?.map((blog) => (\n              <BlogSection\n                key={blog.id}\n                user={user}\n                handleDelete={handleDelete}\n                {...blog}\n              />\n            ))}\n\n            {!hide && (\n              <button className=\"btn btn-primary\" onClick={fetchMore}>\n                Load More\n              </button>\n            )}\n          </div>\n          <div className=\"col-md-3\">\n            <Search search={search} handleChange={handleChange} />\n            <div className=\"blog-heading text-start py-2 mb-4\">Tags</div>\n            <Tags tags={tags} />\n            <FeatureBlogs title={\"Most Popular\"} blogs={blogs} />\n            <Category catgBlogsCount={categoryCount} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/TagBlog.js",[],["153"],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/Auth.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/Detail.js",["154","155"],["156"],"import {\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  limit,\n  query,\n  serverTimestamp,\n  Timestamp,\n  updateDoc,\n  orderBy,\n  where,\n} from \"firebase/firestore\";\nimport { isEmpty } from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport CommentBox from \"../components/CommentBox\";\nimport Like from \"../components/Like\";\nimport FeatureBlogs from \"../components/FeatureBlogs\";\nimport RelatedBlog from \"../components/RelatedBlog\";\nimport Tags from \"../components/Tags\";\nimport UserComments from \"../components/UserComments\";\nimport { db } from \"../firebase\";\nimport Spinner from \"../components/Spinner\";\n\nconst Detail = ({ setActive, user }) => {\n  const userId = user?.uid;\n  const { id } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [blog, setBlog] = useState(null);\n  const [blogs, setBlogs] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [comments, setComments] = useState([]);\n  let [likes, setLikes] = useState([]);\n  const [userComment, setUserComment] = useState(\"\");\n  const [relatedBlogs, setRelatedBlogs] = useState([]);\n\n  useEffect(() => {\n    const getRecentBlogs = async () => {\n      const blogRef = collection(db, \"blogs\");\n      const recentBlogs = query(\n        blogRef,\n        orderBy(\"timestamp\", \"desc\"),\n        limit(5)\n      );\n      const docSnapshot = await getDocs(recentBlogs);\n      setBlogs(docSnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() })));\n    };\n\n    getRecentBlogs();\n  }, []);\n\n  useEffect(() => {\n    id && getBlogDetail();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  // if (loading) {\n  //   return <Spinner />;\n  // }\n  const getBlogDetail = async () => {\n    setLoading(true);\n    const blogRef = collection(db, \"blogs\");\n    const docRef = doc(db, \"blogs\", id);\n    const blogDetail = await getDoc(docRef);\n    const blogs = await getDocs(blogRef);\n    let tags = [];\n    blogs.docs.map((doc) => tags.push(...doc.get(\"tags\")));\n    let uniqueTags = [...new Set(tags)];\n    setTags(uniqueTags);\n    setBlog(blogDetail.data());\n    const relatedBlogsQuery = query(\n      blogRef,\n      where(\"tags\", \"array-contains-any\", blogDetail.data().tags, limit(3))\n    );\n    setComments(blogDetail.data().comments ? blogDetail.data().comments : []);\n    setLikes(blogDetail.data().likes ? blogDetail.data().likes : []);\n    const relatedBlogSnapshot = await getDocs(relatedBlogsQuery);\n    const relatedBlogs = [];\n    relatedBlogSnapshot.forEach((doc) => {\n      relatedBlogs.push({ id: doc.id, ...doc.data() });\n    });\n    setRelatedBlogs(relatedBlogs);\n    setActive(null);\n    setLoading(false);\n  };\n\n  const handleComment = async (e) => {\n    e.preventDefault();\n    comments.push({\n      createdAt: Timestamp.fromDate(new Date()),\n      userId,\n      name: user?.displayName,\n      body: userComment,\n    });\n    toast.success(\"Comment posted successfully\");\n    await updateDoc(doc(db, \"blogs\", id), {\n      ...blog,\n      comments,\n      timestamp: serverTimestamp(),\n    });\n    setComments(comments);\n    setUserComment(\"\");\n  };\n\n  const handleLike = async () => {\n    if (userId) {\n      if (blog?.likes) {\n        const index = likes.findIndex((id) => id === userId);\n        if (index === -1) {\n          likes.push(userId);\n          setLikes([...new Set(likes)]);\n        } else {\n          likes = likes.filter((id) => id !== userId);\n          setLikes(likes);\n        }\n      }\n      await updateDoc(doc(db, \"blogs\", id), {\n        ...blog,\n        likes,\n        timestamp: serverTimestamp(),\n      });\n    }\n  };\n\n  console.log(\"relatedBlogs\", relatedBlogs);\n  return (\n    <div className=\"single\">\n      <div\n        className=\"blog-title-box\"\n        style={{ backgroundImage: `url('${blog?.imgUrl}')` }}\n      >\n        <div className=\"overlay\"></div>\n        <div className=\"blog-title\">\n          <span>{blog?.timestamp.toDate().toDateString()}</span>\n          <h2>{blog?.title}</h2>\n        </div>\n      </div>\n      <div className=\"container-fluid pb-4 pt-4 padding blog-single-content\">\n        <div className=\"container padding\">\n          <div className=\"row mx-0\">\n            <div className=\"col-md-8\">\n              <span className=\"meta-info text-start\">\n                By <p className=\"author\">{blog?.author}</p> -&nbsp;\n                {blog?.timestamp.toDate().toDateString()}\n                <Like handleLike={handleLike} likes={likes} userId={userId} />\n              </span>\n              <p className=\"text-start\">{blog?.description}</p>\n              <div className=\"text-start\">\n                <Tags tags={blog?.tags} />\n              </div>\n              <br />\n              <div className=\"custombox\">\n                <div className=\"scroll\">\n                  <h4 className=\"small-title\">{comments?.length} Comment</h4>\n                  {isEmpty(comments) ? (\n                    <UserComments\n                      msg={\n                        \"No Comment yet posted on this blog. Be the first to comment\"\n                      }\n                    />\n                  ) : (\n                    <>\n                      {comments?.map((comment) => (\n                        <UserComments {...comment} />\n                      ))}\n                    </>\n                  )}\n                </div>\n              </div>\n              <CommentBox\n                userId={userId}\n                userComment={userComment}\n                setUserComment={setUserComment}\n                handleComment={handleComment}\n              />\n            </div>\n            <div className=\"col-md-3\">\n              <div className=\"blog-heading text-start py-2 mb-4\">Tags</div>\n              <Tags tags={tags} />\n              <FeatureBlogs title={\"Recent Blogs\"} blogs={blogs} />\n            </div>\n          </div>\n          <RelatedBlog id={id} blogs={relatedBlogs} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Detail;\n","/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/NotFound.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/About.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/CategoryBlog.js",["157"],[],"import { collection, getDocs, query, where } from \"firebase/firestore\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport BlogSection from \"../components/BlogSection\";\nimport Spinner from \"../components/Spinner\";\nimport { db } from \"../firebase\";\n\nconst CategoryBlog = ({ setActive }) => {\n  const [categoryBlogs, setCategoryBlogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { category } = useParams();\n\n  const getCategoryBlogs = async () => {\n    setLoading(true);\n    const blogRef = collection(db, \"blogs\");\n    const categoryBlogQuery = query(blogRef, where(\"category\", \"==\", category));\n    const docSnapshot = await getDocs(categoryBlogQuery);\n    let categoryBlogs = [];\n    docSnapshot.forEach((doc) => {\n      categoryBlogs.push({ id: doc.id, ...doc.data() });\n    });\n    setCategoryBlogs(categoryBlogs);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    getCategoryBlogs();\n    setActive(null);\n  }, []);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"blog-heading text-center py-2 mb-4\">\n            Category: <strong>{category.toLocaleUpperCase()}</strong>\n          </div>\n          {categoryBlogs?.map((item) => (\n            <div className=\"col-md-6\">\n              <BlogSection key={item.id} {...item} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CategoryBlog;\n","/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/AddEditBlog.js",[],["158"],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/pages/Blogs.js",["159"],[],"import {\n  collection,\n  endAt,\n  endBefore,\n  getDocs,\n  limit,\n  limitToLast,\n  orderBy,\n  query,\n  startAfter,\n} from \"firebase/firestore\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport BlogSection from \"../components/BlogSection\";\nimport Pagination from \"../components/Pagination\";\nimport Spinner from \"../components/Spinner\";\nimport { db } from \"../firebase\";\n\nconst Blogs = ({setActive}) => {\n  const [loading, setLoading] = useState(false);\n  const [blogs, setBlogs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastVisible, setLastVisible] = useState(null);\n  const [noOfPages, setNoOfPages] = useState(null);\n  const [count, setCount] = useState(null);\n\n  useEffect(() => {\n    getBlogsData();\n    getTotalBlogs();\n    setActive(\"blogs\");\n  }, []);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  const getBlogsData = async () => {\n    setLoading(true);\n    const blogRef = collection(db, \"blogs\");\n    const first = query(blogRef, orderBy(\"title\"), limit(4));\n    const docSnapshot = await getDocs(first);\n    setBlogs(docSnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() })));\n    setCount(docSnapshot.size);\n    setLastVisible(docSnapshot.docs[docSnapshot.docs.length - 1]);\n    setLoading(false);\n  };\n\n  const getTotalBlogs = async () => {\n    const blogRef = collection(db, \"blogs\");\n    const docSnapshot = await getDocs(blogRef);\n    const totalBlogs = docSnapshot.size;\n    const totalPage = Math.ceil(totalBlogs / 4);\n    setNoOfPages(totalPage);\n  };\n\n  const fetchMore = async () => {\n    setLoading(true);\n    const blogRef = collection(db, \"blogs\");\n    const nextBlogsQuery = query(\n      blogRef,\n      orderBy(\"title\"),\n      startAfter(lastVisible),\n      limit(4)\n    );\n    const nextBlogsSnaphot = await getDocs(nextBlogsQuery);\n    setBlogs(\n      nextBlogsSnaphot.docs.map((doc) => ({ id: doc.id, ...doc.data() }))\n    );\n    setCount(nextBlogsSnaphot.size);\n    setLastVisible(nextBlogsSnaphot.docs[nextBlogsSnaphot.docs.length - 1]);\n    setLoading(false);\n  };\n  const fetchPrev = async () => {\n    setLoading(true);\n    const blogRef = collection(db, \"blogs\");\n    const end =\n      noOfPages !== currentPage ? endAt(lastVisible) : endBefore(lastVisible);\n    const limitData =\n      noOfPages !== currentPage\n        ? limit(4)\n        : count <= 4 && noOfPages % 2 === 0\n        ? limit(4)\n        : limitToLast(4);\n    const prevBlogsQuery = query(blogRef, orderBy(\"title\"), end, limitData);\n    const prevBlogsSnaphot = await getDocs(prevBlogsQuery);\n    setBlogs(\n      prevBlogsSnaphot.docs.map((doc) => ({ id: doc.id, ...doc.data() }))\n    );\n    setCount(prevBlogsSnaphot.size);\n    setLastVisible(prevBlogsSnaphot.docs[prevBlogsSnaphot.docs.length - 1]);\n    setLoading(false);\n  };\n\n  const handlePageChange = (value) => {\n    if (value === \"Next\") {\n      setCurrentPage((page) => page + 1);\n      fetchMore();\n    } else if (value === \"Prev\") {\n      setCurrentPage((page) => page - 1);\n      fetchPrev();\n    }\n  };\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"blog-heading text-center py-2 mb-4\">Daily Blogs</div>\n          {blogs?.map((blog) => (\n            <div className=\"col-md-6\" key={blog.id}>\n              <BlogSection {...blog} />\n            </div>\n          ))}\n        </div>\n        <Pagination\n          currentPage={currentPage}\n          noOfPages={noOfPages}\n          handlePageChange={handlePageChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Blogs;\n","/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/ScrollToTop.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Header.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/BlogSection.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Trending.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Spinner.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Tags.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Category.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Search.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Like.js",["160"],[],"import React, { useEffect } from \"react\";\nimport { Tooltip } from \"bootstrap\";\n\nconst Like = ({ handleLike, likes, userId }) => {\n  useEffect(() => {\n    let tooltipTriggerList = [].slice.call(\n      document.querySelectorAll('[data-bs-toggle=\"tooltip\"]')\n    );\n    let tootipList = tooltipTriggerList.map(function (tooltipTriggerEl) {\n      return new Tooltip(tooltipTriggerEl);\n    });\n  }, []);\n\n  const LikeStatus = () => {\n    if (likes?.length > 0) {\n      return likes.find((id) => id === userId) ? (\n        <>\n          <i className=\"bi bi-hand-thumbs-up-fill\" />\n          &nbsp;{likes.length} {likes.length === 1 ? \"Like\" : \"Likes\"}\n        </>\n      ) : (\n        <>\n          <i className=\"bi bi-hand-thumbs-up\" />\n          &nbsp;{likes.length} {likes.length === 1 ? \"Like\" : \"Likes\"}\n        </>\n      );\n    }\n    return (\n      <>\n        <i className=\"bi bi-hand-thumbs-up\" />\n        &nbsp;Like\n      </>\n    );\n  };\n  return (\n    <>\n      <span\n        style={{ float: \"right\", cursor: \"pointer\", marginTop: \"-7px\" }}\n        onClick={!userId ? null : handleLike}\n      >\n        {!userId ? (\n          <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            data-bs-toggle=\"tooltip\"\n            data-bs-placement=\"top\"\n            title=\"Please Login to like post\"\n          >\n            <LikeStatus />\n          </button>\n        ) : (\n          <button type=\"button\" className=\"btn btn-primary\">\n            <LikeStatus />\n          </button>\n        )}\n      </span>\n    </>\n  );\n};\n\nexport default Like;\n","/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/RelatedBlog.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/FeatureBlogs.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/UserComments.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/CommentBox.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Pagination.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/components/Card.js",[],[],"/Users/abhishekkumar/Desktop/firebase-blog-master/src/utility/index.js",[],[],{"ruleId":"161","severity":1,"message":"162","line":157,"column":6,"nodeType":"163","endLine":157,"endColumn":19,"suggestions":"164"},{"ruleId":"161","severity":1,"message":"165","line":30,"column":6,"nodeType":"163","endLine":30,"endColumn":8,"suggestions":"166","suppressions":"167"},{"ruleId":"168","severity":1,"message":"169","line":25,"column":8,"nodeType":"170","messageId":"171","endLine":25,"endColumn":15},{"ruleId":"168","severity":1,"message":"172","line":30,"column":10,"nodeType":"170","messageId":"171","endLine":30,"endColumn":17},{"ruleId":"161","severity":1,"message":"173","line":57,"column":6,"nodeType":"163","endLine":57,"endColumn":10,"suggestions":"174","suppressions":"175"},{"ruleId":"161","severity":1,"message":"176","line":29,"column":6,"nodeType":"163","endLine":29,"endColumn":8,"suggestions":"177"},{"ruleId":"161","severity":1,"message":"173","line":88,"column":6,"nodeType":"163","endLine":88,"endColumn":10,"suggestions":"178","suppressions":"179"},{"ruleId":"161","severity":1,"message":"180","line":32,"column":6,"nodeType":"163","endLine":32,"endColumn":8,"suggestions":"181"},{"ruleId":"168","severity":1,"message":"182","line":9,"column":9,"nodeType":"170","messageId":"171","endLine":9,"endColumn":19},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchBlogs'. Either include it or remove the dependency array.","ArrayExpression",["183"],"React Hook useEffect has missing dependencies: 'getTagBlogs' and 'setActive'. Either include them or remove the dependency array. If 'setActive' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["184"],["185"],"no-unused-vars","'Spinner' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getBlogDetail'. Either include it or remove the dependency array.",["186"],["187"],"React Hook useEffect has missing dependencies: 'getCategoryBlogs' and 'setActive'. Either include them or remove the dependency array. If 'setActive' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["188"],["189"],["190"],"React Hook useEffect has a missing dependency: 'setActive'. Either include it or remove the dependency array. If 'setActive' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["191"],"'tootipList' is assigned a value but never used.",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"kind":"196","justification":"197"},{"desc":"198","fix":"199"},{"kind":"196","justification":"197"},{"desc":"200","fix":"201"},{"desc":"198","fix":"202"},{"kind":"196","justification":"197"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [searchBlogs, searchQuery]",{"range":"205","text":"206"},"Update the dependencies array to be: [getTagBlogs, setActive]",{"range":"207","text":"208"},"directive","","Update the dependencies array to be: [getBlogDetail, id]",{"range":"209","text":"210"},"Update the dependencies array to be: [getCategoryBlogs, setActive]",{"range":"211","text":"212"},{"range":"213","text":"210"},"Update the dependencies array to be: [setActive]",{"range":"214","text":"215"},[4523,4536],"[searchBlogs, searchQuery]",[1001,1003],"[getTagBlogs, setActive]",[1688,1692],"[getBlogDetail, id]",[1000,1002],"[getCategoryBlogs, setActive]",[2252,2256],[843,845],"[setActive]"]